# Generated by Django 3.0.3 on 2020-03-04 20:11

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='arena',
            name='rank',
            field=models.IntegerField(choices=[(901, 'Beginner'), (1001, 'Challenger I'), (1002, 'Challenger II'), (1003, 'Challenger III'), (2001, 'Fighter I'), (2002, 'Fighter II'), (2003, 'Fighter III'), (3001, 'Conqueror I'), (3002, 'Conqueror II'), (3003, 'Conqueror III'), (4001, 'Guardian I'), (4002, 'Guardian II'), (4003, 'Guardian III'), (5001, 'Legend')], db_index=True),
        ),
        migrations.AlterField(
            model_name='building',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='deck',
            name='id',
            field=models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='deck',
            name='monsters',
            field=models.ManyToManyField(db_index=True, related_name='monsters_in_deck', related_query_name='monsters_in_deck', to='website.Monster'),
        ),
        migrations.AlterField(
            model_name='deck',
            name='place',
            field=models.IntegerField(choices=[(1, 'Arena'), (2, 'Guild War'), (3, 'Raid'), (4, 'Lab Normal'), (5, 'Lab Rescue'), (6, 'ToA'), (7, 'Lab Speed Limit'), (8, 'Lab Time Limit'), (9, 'Lab Cooldown'), (10, 'Lab Explode'), (11, 'Lab Boss')], db_index=True),
        ),
        migrations.AlterField(
            model_name='deck',
            name='team_runes_eff',
            field=models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='dimensionholerun',
            name='clear_time',
            field=models.DurationField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='dimensionholerun',
            name='date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='dimensionholerun',
            name='dungeon',
            field=models.IntegerField(choices=[(1101, 'Ellunia'), (1201, 'Fairy (Ellunia)'), (1202, 'Pixie (Ellunia)'), (2101, 'Karzhan'), (2202, 'Inugami (Karzhan)'), (2201, 'Warbear (Karzhan)'), (3101, 'Lumel'), (3201, 'Werewolf (Lumel)'), (3203, 'Martial Cat (Lumel)')], db_index=True),
        ),
        migrations.AlterField(
            model_name='dimensionholerun',
            name='monsters',
            field=models.ManyToManyField(db_index=True, related_name='monsters_in_run', related_query_name='monsters_in_comp', to='website.Monster'),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='clear_time',
            field=models.DurationField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='dungeon',
            field=models.IntegerField(choices=[(1001, 'Hall of Dark'), (2001, 'Hall of Fire'), (3001, 'Hall of Water'), (4001, 'Hall of Wind'), (5001, 'Hall of Magic'), (6001, 'Necropolis'), (7001, 'Hall of Light'), (8001, 'Giants Keep'), (9001, 'Dragons Lair'), (999999999, 'Rift of Worlds')], db_index=True),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='id',
            field=models.BigAutoField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='monsters',
            field=models.ManyToManyField(db_index=True, to='website.Monster'),
        ),
        migrations.AlterField(
            model_name='dungeonrun',
            name='wizard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Wizard'),
        ),
        migrations.AlterField(
            model_name='homunculusskill',
            name='depth',
            field=models.SmallIntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='homunculusskill',
            name='description',
            field=models.CharField(db_index=True, max_length=512),
        ),
        migrations.AlterField(
            model_name='homunculusskill',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='homunculusskill',
            name='letter',
            field=models.CharField(db_index=True, max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='homunculusskill',
            name='name',
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='monster',
            name='acc',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='attack',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='avg_eff',
            field=models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='monster',
            name='created',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='crit_dmg',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='crit_rate',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='defense',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='eff_hp',
            field=models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='monster',
            name='eff_hp_def_break',
            field=models.IntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='monster',
            name='hp',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='id',
            field=models.BigIntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='level',
            field=models.SmallIntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='res',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='runes',
            field=models.ManyToManyField(blank=True, db_index=True, related_name='equipped_runes', related_query_name='equipped_runes', to='website.Rune'),
        ),
        migrations.AlterField(
            model_name='monster',
            name='skills',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(db_index=True), size=None),
        ),
        migrations.AlterField(
            model_name='monster',
            name='speed',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monster',
            name='stars',
            field=models.SmallIntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='monsterbase',
            name='awaken',
            field=models.SmallIntegerField(choices=[(0, 'Unawakened'), (1, 'Awakened'), (2, '2A')], db_index=True),
        ),
        migrations.AlterField(
            model_name='monsterbase',
            name='base_class',
            field=models.SmallIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)]),
        ),
        migrations.AlterField(
            model_name='monsterbase',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='monsterbase',
            name='max_skills',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(db_index=True), size=None),
        ),
        migrations.AlterField(
            model_name='monsterbase',
            name='name',
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='monsterfamily',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='monsterfamily',
            name='name',
            field=models.CharField(db_index=True, max_length=30),
        ),
        migrations.AlterField(
            model_name='monstersource',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='battle_key',
            field=models.BigIntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='clear_rating',
            field=models.IntegerField(blank=True, choices=[(1, 'F'), (2, 'D'), (3, 'C'), (4, 'B-'), (5, 'B'), (6, 'B+'), (7, 'A-'), (8, 'A'), (9, 'A+'), (10, 'S'), (11, 'SS'), (12, 'SSS')], db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='clear_time',
            field=models.DurationField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='date',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='dmg_total',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='dungeon',
            field=models.IntegerField(choices=[(1001, 'Ice Beast'), (2001, 'Fire Beast'), (3001, 'Wind Beast'), (4001, 'Light Beast'), (5001, 'Dark Beast')], db_index=True),
        ),
        migrations.AlterField(
            model_name='riftdungeonrun',
            name='monsters',
            field=models.ManyToManyField(db_index=True, to='website.Monster'),
        ),
        migrations.AlterField(
            model_name='rune',
            name='efficiency',
            field=models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='rune',
            name='efficiency_max',
            field=models.FloatField(db_index=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='rune',
            name='equipped',
            field=models.BooleanField(db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='id',
            field=models.BigIntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='innate',
            field=models.SmallIntegerField(blank=True, choices=[(1, 'HP+'), (2, 'HP%'), (3, 'ATK+'), (4, 'ATK%'), (5, 'DEF+'), (6, 'DEF%'), (8, 'SPD'), (9, 'CRate%'), (10, 'CDmg%'), (11, 'RES%'), (12, 'ACC%')], db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='innate_value',
            field=models.IntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='locked',
            field=models.BooleanField(db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='primary',
            field=models.SmallIntegerField(choices=[(1, 'HP+'), (2, 'HP%'), (3, 'ATK+'), (4, 'ATK%'), (5, 'DEF+'), (6, 'DEF%'), (8, 'SPD'), (9, 'CRate%'), (10, 'CDmg%'), (11, 'RES%'), (12, 'ACC%')], db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='primary_value',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='quality',
            field=models.SmallIntegerField(choices=[(0, 'Unknown'), (1, 'Common'), (2, 'Magic'), (3, 'Rare'), (4, 'Hero'), (5, 'Legend'), (11, 'Ancient Common'), (12, 'Ancient Magic'), (13, 'Ancient Rare'), (14, 'Ancient Hero'), (15, 'Ancient Legend')], db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='quality_original',
            field=models.SmallIntegerField(choices=[(0, 'Unknown'), (1, 'Common'), (2, 'Magic'), (3, 'Rare'), (4, 'Hero'), (5, 'Legend'), (11, 'Ancient Common'), (12, 'Ancient Magic'), (13, 'Ancient Rare'), (14, 'Ancient Hero'), (15, 'Ancient Legend')], db_index=True),
        ),
        migrations.AlterField(
            model_name='rune',
            name='slot',
            field=models.SmallIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)]),
        ),
        migrations.AlterField(
            model_name='rune',
            name='stars',
            field=models.SmallIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)]),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_acc',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_atk',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_atk_flat',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_crit_dmg',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_crit_rate',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_def',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_def_flat',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_hp',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_hp_flat',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_res',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='sub_speed',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.SmallIntegerField(), blank=True, db_index=True, null=True, size=None),
        ),
        migrations.AlterField(
            model_name='rune',
            name='upgrade_curr',
            field=models.SmallIntegerField(db_index=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)]),
        ),
        migrations.AlterField(
            model_name='runeset',
            name='amount',
            field=models.IntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='runeset',
            name='id',
            field=models.IntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='runeset',
            name='name',
            field=models.CharField(db_index=True, max_length=30),
        ),
        migrations.AlterField(
            model_name='siegerecord',
            name='monsters',
            field=models.ManyToManyField(db_index=True, related_name='siege_defense_monsters', to='website.Monster'),
        ),
        migrations.AlterField(
            model_name='siegerecord',
            name='ratio',
            field=models.FloatField(db_index=True),
        ),
        migrations.AlterField(
            model_name='siegerecord',
            name='wizard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.Wizard'),
        ),
        migrations.AlterField(
            model_name='wizard',
            name='id',
            field=models.BigIntegerField(db_index=True, primary_key=True, serialize=False, unique=True),
        ),
        migrations.AlterField(
            model_name='wizardbuilding',
            name='level',
            field=models.SmallIntegerField(db_index=True, default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
    ]
